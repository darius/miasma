(define h
  (make-test "compiled2"

'(	
;; "code generated by mlisp"

;; (emit-set-continuation .all-done-354)
	(mov.gv.iv %ebp .all-done-354)

;; (emit-assign value (write 1 "Hello, world!\012" 14))
	(push.iv 1)
	(push.iv .literal-355)
	(push.iv 14)
	(call.jv write)
	(mov.ev.gv %eax %ecx)

;; (emit-return)
	(jmp.ev %ebp)

;; (emit-label .all-done-354)
.all-done-354	
		(ret)
.literal-355		(asciiz "Hello, world!
")
write		(push.gv %ebp)
	(mov.gv.ev %ebp %esp)
	(push.gv %eax)
	(push.gv %ebx)
	(push.gv %edx)
	(mov.gv.iv %eax 4)
	(mov.gv.ev %ebx (at+b %ebp 16))
	(mov.gv.ev %ecx (at+b %ebp 12))
	(mov.gv.ev %edx (at+b %ebp 8))
	(int.ub 128)
	(mov.gv.ev %ecx %eax)
	(pop.gv %edx)
	(pop.gv %ebx)
	(pop.gv %eax)
	(pop.gv %ebp)
	(ret.iw 12)
read		(push.gv %ebp)
	(mov.gv.ev %ebp %esp)
	(push.gv %eax)
	(push.gv %ebx)
	(push.gv %edx)
	(mov.gv.iv %eax 3)
	(mov.gv.ev %ebx (at+b %ebp 16))
	(mov.gv.ev %ecx (at+b %ebp 12))
	(mov.gv.ev %edx (at+b %ebp 8))
	(int.ub 128)
	(mov.gv.ev %ecx %eax)
	(pop.gv %edx)
	(pop.gv %ebx)
	(pop.gv %eax)
	(pop.gv %ebp)
	(ret.iw 12)
sbrk		(push.gv %eax)
	(push.gv %ebx)
	(push.gv %edx)
	(mov.gv.iv %eax 45)
	(mov.gv.ev %ebx (at+b %ebp 20))
	(mov.gv.ev %ecx (at+b %ebp 16))
	(mov.gv.ev %edx (at+b %ebp 12))
	(int.ub 128)
	(mov.gv.ev %ecx %eax)
	(pop.gv %edx)
	(pop.gv %ebx)
	(pop.gv %eax)
	(ret.iw 16)
)
))
